class Solution {
    public void rotateRight(int[] nums, int k) {
        int n = nums.length;
        k = k % n; // Handle cases where k >= n

        // Step 1: Reverse the entire array
        reverse(nums, 0, n - 1);
        // Step 2: Reverse the first k elements
        reverse(nums, 0, k - 1);
        // Step 3: Reverse the remaining elements
        reverse(nums, k, n - 1);
    }

    private void reverse(int[] nums, int left, int right) {
        while (left < right) {
            int temp = nums[left];
            nums[left] = nums[right];
            nums[right] = temp;
            left++;
            right--;
        }
    }
}


//Brute
class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k = k % n; 
        int[] temp = new int[k];

        for(int i = 0; i< k; i++){
            temp[i] = nums[n - k + i];
        }

        for (int i = n - 1; i >= k; i--) {
           nums[i] = nums[i - k];
        }

        for (int i = 0; i < k; i++) {
            nums[i] = temp[i];
        }
    }
}
